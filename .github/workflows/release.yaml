
name: Release

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  
  # test:
    
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.6, 3.7, 3.8]
  #       os: [ubuntu-latest, macos-latest, windows-latest]

  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
        
  #     - uses: abatilo/actions-poetry@8284d202bc272a8d0597e26e1c0b4a0d0c73db93
      
  #     - name: Remove lockfile
  #       run: rm poetry.lock

  #     - name: Install dependencies
  #       run: poetry install

  #     - name: Run tests
  #       run: poetry run pytest -s
  
  publish:
    # needs: test
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
        
      - uses: abatilo/actions-poetry@8284d202bc272a8d0597e26e1c0b4a0d0c73db93
      
      - name: Install dependencies
        run: poetry install
      
      - name: test
        run: echo $(poetry run python -c "import importlib_metadata; print(f\"v{importlib_metadata.version('pystematic-torch')}\")")

      # - name: Tag
      #   run: git tag $(poetry run python -c "import importlib_metadata; print(f'v{importlib_metadata.version('pystematic-torch')}')") && git push --tags

      # - name: Build wheel
      #   run: poetry build -f wheel

      # - name: Publish to pypi
      #   run: poetry publish -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}
